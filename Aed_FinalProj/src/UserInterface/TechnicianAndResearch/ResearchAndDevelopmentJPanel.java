/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.TechnicianAndResearch;

import Business.EcoSystem;
import Business.Machine.Machine;
import Business.Supplier.Supplier;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Komal
 */
public class ResearchAndDevelopmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ResearchAndDevelopmentJPanel
     */
    private JPanel container;
    private EcoSystem system;
    private Date date;
    private Date thirtyBefore;
    private Machine machine;
    
    public ResearchAndDevelopmentJPanel(JPanel container, EcoSystem system) {
        initComponents();
        this.container=container;
        this.system=system;
        date =new Date();
        thirtyBefore =addDays(date, -30);
        DateFormat oDateFormat = new SimpleDateFormat("MM-dd-yyyy");
        calculate();
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblfilter.getModel();
        model.setRowCount(0);
        for (Supplier s : system.getSupplierCatalog().getSupplierList()) {
            for (Machine m : s.getMachineList().getMachineCatalog()) {
                if (m.isFlag()) {

                    Object[] row = new Object[6];
                    row[0] = m;
                    row[1] = m.getCode();
                    row[2] = m.getType();
                    row[3] = m.getQuantity();
                    row[4] = m.getPrice();
                    row[5] = m.getDateOfEntry();
                    model.addRow(row);
                }
            }
        }
    }
    
    public boolean isWithinRange(Date testDate) {
        if (testDate.before(date) && testDate.after(thirtyBefore)) {
            return true;
        } else {
            return false;
        }
    }
    
    public static Date addDays(Date date, int days) {

        GregorianCalendar cal = new GregorianCalendar();
        cal.setTime(date);
        cal.add(Calendar.DATE, days);

        return cal.getTime();
    }
    
    public void calculate()
    {
        for(Supplier s: system.getSupplierCatalog().getSupplierList()){
            for(Machine m : s.getMachineList().getMachineCatalog()){
                boolean f= isWithinRange(m.getDateOfEntry());
                m.setFlag(f);
            }
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        lblCustomername1 = new javax.swing.JLabel();
        btnReccomend = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblfilter = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 0));
        jLabel6.setText("Activity:");
        add(jLabel6);
        jLabel6.setBounds(10, 11, 56, 16);

        lblCustomername1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblCustomername1.setForeground(new java.awt.Color(0, 102, 0));
        lblCustomername1.setText("Research & Development");
        add(lblCustomername1);
        lblCustomername1.setBounds(72, 11, 165, 16);

        btnReccomend.setBackground(new java.awt.Color(0, 153, 153));
        btnReccomend.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnReccomend.setForeground(new java.awt.Color(255, 255, 255));
        btnReccomend.setText("Recommend to Users");
        btnReccomend.setMaximumSize(new java.awt.Dimension(200, 200));
        btnReccomend.setMinimumSize(new java.awt.Dimension(200, 200));
        btnReccomend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReccomendActionPerformed(evt);
            }
        });
        add(btnReccomend);
        btnReccomend.setBounds(232, 349, 238, 38);

        tblfilter.setBackground(new java.awt.Color(204, 255, 204));
        tblfilter.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tblfilter.setForeground(new java.awt.Color(102, 0, 102));
        tblfilter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Machine", "Code", "Type", "Quantity", "Price", "Date of Entry"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblfilter);

        add(jScrollPane2);
        jScrollPane2.setBounds(36, 88, 740, 227);
    }// </editor-fold>//GEN-END:initComponents

    private void btnReccomendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReccomendActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblfilter.getSelectedRow();
        if (selectedRow >= 0) {
            machine = (Machine) tblfilter.getValueAt(selectedRow, 0);
            machine.setRecommend(true);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Machine ", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnReccomendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReccomend;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCustomername1;
    private javax.swing.JTable tblfilter;
    // End of variables declaration//GEN-END:variables
}
