/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CommonLoginPage;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MachineRequest;
import Business.WorkQueue.WorkRequest;
import static UserInterface.CommonLoginPage.CheckOutJPanel.addDays;
import UserInterface.DoctorRole.DoctorWorkAreaJPanel;
import UserInterface.LabAssistant.LabAssistantWorkAreaJPanel;
import UserInterface.NGOVolunteer.NGOVolunteerJPanel;
import UserInterface.PatientRole.PatientWorkAreaJPanel;
import UserInterface.UHCResearcher.UHCResearcherJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Komal
 */
public class PayInstallmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PayInstallmentJPanel
     */
    private JPanel container;
    private UserAccount ua;
    private Organization org;
    private Enterprise enterprise;
    private EcoSystem system;
    private String szDate1;
    private String szDate;

    public PayInstallmentJPanel(JPanel container, UserAccount ua, Organization org, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.container=container;
        this.ua=ua;
        this.org=org;
        this.enterprise=enterprise;
        this.system=system;
        populateInstallmentTable();
        Date nd = new Date();
        DateFormat oDateFormat = new SimpleDateFormat("MM-dd-yyyy");
        szDate1 = oDateFormat.format(nd);
        Date newDate = addDays(nd, 30);
        szDate = oDateFormat.format(newDate);
    }
    
    public void populateInstallmentTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblInstallmentTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest req : ua.getWorkQueue().getWorkRequestList()) {
            if (req instanceof MachineRequest) {

                DecimalFormat df = new DecimalFormat("#.00");
                
                Object row[] = new Object[9];
                row[0] = req.getMachine().getName();
                row[1] = req.getMachine().getCode();
                row[2] = ((MachineRequest) req);
                row[3] = df.format(((MachineRequest) req).getTotalPrice());
                row[4] = df.format(((MachineRequest) req).getInstallmentPrice());
                int noOfInstallment = ((MachineRequest) req).getNoOfInstallmentsRemaining();
                row[5] = noOfInstallment;
                row[6] = ((MachineRequest) req).getPaymentDateInString();
                if (noOfInstallment > 0) {
                    row[7] = df.format(((MachineRequest) req).getRemainingAmount());
                    row[8] = ((MachineRequest) req).getNextDateforLoanPanel();
                } else {
                    row[7] = 0;
                    row[8] = "-";
                }
                dtm.addRow(row);

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCustomername1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInstallmentTable = new javax.swing.JTable();
        btnPayInstallment = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        lblCustomername1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblCustomername1.setForeground(new java.awt.Color(0, 102, 0));
        lblCustomername1.setText("Pay Installment");
        add(lblCustomername1);
        lblCustomername1.setBounds(72, 11, 101, 16);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 0));
        jLabel6.setText("Activity:");
        add(jLabel6);
        jLabel6.setBounds(10, 11, 56, 16);

        btnBack.setBackground(new java.awt.Color(0, 153, 153));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<");
        btnBack.setMaximumSize(new java.awt.Dimension(200, 200));
        btnBack.setMinimumSize(new java.awt.Dimension(200, 200));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(10, 450, 55, 39);

        tblInstallmentTable.setBackground(new java.awt.Color(204, 255, 204));
        tblInstallmentTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tblInstallmentTable.setForeground(new java.awt.Color(102, 0, 102));
        tblInstallmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Machine", "Code", "Quantity", "Price", "Installment", "No of Installments", "Payment Date", "Remaining Amount", "Next Due Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInstallmentTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(90, 50, 1090, 300);

        btnPayInstallment.setBackground(new java.awt.Color(0, 153, 153));
        btnPayInstallment.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnPayInstallment.setForeground(new java.awt.Color(255, 255, 255));
        btnPayInstallment.setText("Pay Installment");
        btnPayInstallment.setMaximumSize(new java.awt.Dimension(200, 200));
        btnPayInstallment.setMinimumSize(new java.awt.Dimension(200, 200));
        btnPayInstallment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayInstallmentActionPerformed(evt);
            }
        });
        add(btnPayInstallment);
        btnPayInstallment.setBounds(990, 390, 180, 50);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        if (ua.getRole().toString().equals("Doctor")) {
            container.remove(this);
            Component[] componentArray = container.getComponents();
            Component component = componentArray[componentArray.length - 1];
            DoctorWorkAreaJPanel dwjp = (DoctorWorkAreaJPanel) component;
            dwjp.populateRequestTable();
            CardLayout layout = (CardLayout) container.getLayout();
            layout.previous(container);
        }
        if (ua.getRole().toString().equals("LabAssistant")) {
            container.remove(this);
            Component[] componentArray = container.getComponents();
            Component component = componentArray[componentArray.length - 1];
            LabAssistantWorkAreaJPanel lwjp = (LabAssistantWorkAreaJPanel) component;
            lwjp.populateRequestTable();
            CardLayout layout = (CardLayout) container.getLayout();
            layout.previous(container);
        }
        if (ua.getRole().toString().equals("Volunteer")) {
            container.remove(this);
            Component[] componentArray = container.getComponents();
            Component component = componentArray[componentArray.length - 1];
            NGOVolunteerJPanel nvjp = (NGOVolunteerJPanel) component;
            nvjp.populateRequestTable();
            CardLayout layout = (CardLayout) container.getLayout();
            layout.previous(container);
        }
        if (ua.getRole().toString().equals("Patient")) {
            container.remove(this);
            Component[] componentArray = container.getComponents();
            Component component = componentArray[componentArray.length - 1];
            PatientWorkAreaJPanel pwjp = (PatientWorkAreaJPanel) component;
            pwjp.populateRequestTable();
            CardLayout layout = (CardLayout) container.getLayout();
            layout.previous(container);
        }
        if (ua.getRole().toString().equals("Researcher")) {
            container.remove(this);
            Component[] componentArray = container.getComponents();
            Component component = componentArray[componentArray.length - 1];
            UHCResearcherJPanel uhcrjp = (UHCResearcherJPanel) component;
            uhcrjp.populateRequestTable();
            CardLayout layout = (CardLayout) container.getLayout();
            layout.previous(container);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPayInstallmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayInstallmentActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblInstallmentTable.getSelectedRow();
        if (selectedRow >= 0) {
            MachineRequest req = (MachineRequest) tblInstallmentTable.getValueAt(selectedRow, 2);
            if(!req.getStatus().equals("Completed")){
            JOptionPane.showMessageDialog(null, "Machine is out for delivery!!");
            return;
            }else{
            if (req.getNoOfInstallmentsRemaining() > 0) {
                
                double paidAmt = req.getPaidAmount() + req.getInstallmentPrice();
                double remainingAmt = req.getRemainingAmount() - req.getInstallmentPrice();
                req.setPaidAmount(paidAmt);
                req.setRemainingAmount(remainingAmt);
                req.setNoOfInstallmentsRemaining(req.getNoOfInstallmentsRemaining() - 1);
                req.setPaymentDateInString(szDate1);
               
                req.setNextDateOfInstallmentInString(szDate);
               
                req.setNextDateforLoanPanel(szDate);
                
                JOptionPane.showMessageDialog(null, "Payment Complete !!");
                populateInstallmentTable();
            } else {
                JOptionPane.showMessageDialog(null, "Payment Complete!! No due left");
                return;
            }
        } 
        }else {
            JOptionPane.showMessageDialog(null, "Select a Machine to pay Installment","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnPayInstallmentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPayInstallment;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCustomername1;
    private javax.swing.JTable tblInstallmentTable;
    // End of variables declaration//GEN-END:variables
}
