/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CommonLoginPage;

import Business.EcoSystem;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MachineRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Komal
 */
public class CheckOutJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddToCartJPanel
     */
    private JPanel container;
    private UserAccount ua;
    private Organization org;
    private Order o;
    private EcoSystem system;
    Date nd = new Date();
    DateFormat oDateFormat = new SimpleDateFormat("MM-dd-yyyy");
    String szDate1 = oDateFormat.format(nd);
    Date newDate = addDays(nd, 30);
    String szDate = oDateFormat.format(newDate);
    
    public CheckOutJPanel(JPanel container, UserAccount ua, Organization org, Order o, EcoSystem system) {
        initComponents();
        this.container = container;
        this.ua = ua;
        this.org = org;
        this.o = o;
        this.system = system;
        populateOrder();
        btnBack.setEnabled(true);
        btnBack.setEnabled(false);
    }
    
    public void populateOrder() {
        DecimalFormat df = new DecimalFormat("#.00");
        DefaultTableModel dtm = (DefaultTableModel) tblAddedtoCart.getModel();
        dtm.setRowCount(0);
        
        for (OrderItem oi : o.getOrderItemList()) {
            Object row[] = new Object[4];
            row[0] = oi;
            row[1] = oi.getMachine().getCode();
            row[2] = oi.getOrderItemQuantity();
            row[3] = df.format(oi.getMachine().getLoan().getInstallmentsPaidPrice() * oi.getMachine().getLoan().getTimePeriod());
            
            dtm.addRow(row);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCustomername1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAddedtoCart = new javax.swing.JTable();
        btnBuy = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInstallmentInfo = new javax.swing.JTable();
        lblDownPayment = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        lblCustomername1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblCustomername1.setForeground(new java.awt.Color(0, 102, 0));
        lblCustomername1.setText("Checkout");
        add(lblCustomername1);
        lblCustomername1.setBounds(72, 11, 60, 16);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 0));
        jLabel6.setText("Activity:");
        add(jLabel6);
        jLabel6.setBounds(10, 11, 56, 16);

        tblAddedtoCart.setBackground(new java.awt.Color(204, 255, 204));
        tblAddedtoCart.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tblAddedtoCart.setForeground(new java.awt.Color(102, 0, 102));
        tblAddedtoCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Machine", "Code", "Quantity", "Total Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAddedtoCart);

        add(jScrollPane1);
        jScrollPane1.setBounds(210, 60, 690, 97);

        btnBuy.setBackground(new java.awt.Color(0, 153, 153));
        btnBuy.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBuy.setForeground(new java.awt.Color(255, 255, 255));
        btnBuy.setText("Pay");
        btnBuy.setMaximumSize(new java.awt.Dimension(200, 200));
        btnBuy.setMinimumSize(new java.awt.Dimension(200, 200));
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });
        add(btnBuy);
        btnBuy.setBounds(840, 180, 170, 50);

        btnBack.setBackground(new java.awt.Color(0, 153, 153));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<");
        btnBack.setMaximumSize(new java.awt.Dimension(200, 200));
        btnBack.setMinimumSize(new java.awt.Dimension(200, 200));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(10, 468, 55, 39);

        tblInstallmentInfo.setBackground(new java.awt.Color(204, 255, 204));
        tblInstallmentInfo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tblInstallmentInfo.setForeground(new java.awt.Color(102, 0, 102));
        tblInstallmentInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Payment No", "Total Amount", "Remaining Number of Installments ", "Installment", "Remaining Amount", "Payment Date", "Next Due Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblInstallmentInfo);

        add(jScrollPane2);
        jScrollPane2.setBounds(60, 300, 1040, 119);

        lblDownPayment.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblDownPayment.setForeground(new java.awt.Color(0, 102, 0));
        lblDownPayment.setText("Checkout");
        add(lblDownPayment);
        lblDownPayment.setBounds(113, 248, 60, 16);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 153, 0));
        jLabel7.setText("Down Payment");
        add(jLabel7);
        jLabel7.setBounds(10, 248, 97, 16);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        // TODO add your handling code here:
        btnBack.setEnabled(true);
        for (OrderItem oi : o.getOrderItemList()) {
            MachineRequest req = new MachineRequest();
            req.setMachine(oi.getMachine());
            req.setSender(ua);
            req.setStatus("Requested");
            req.setRequestQuantity(oi.getOrderItemQuantity());
            req.setTotalPrice(oi.getSalesPrice());
            double installmentValue = oi.getMachine().getLoan().getInstallmentsPaidPrice();
            req.setInstallmentPrice(oi.getMachine().getLoan().getInstallmentsPaidPrice());
            req.setPaidAmount(oi.getMachine().getLoan().getInstallmentsPaidPrice());
            req.setRemainingAmount(req.getTotalPrice() - req.getPaidAmount());
            req.setDateOfPurchaseInString(szDate1);
            req.setNextDateOfInstallmentInString(szDate);
            req.setNoOfInstallmentsRemaining(oi.getMachine().getLoan().getTimePeriod() - 1);
            org.getWorkQueue().getWorkRequestList().add(req);
            ua.getWorkQueue().getWorkRequestList().add(req);
            system.getWorkQueue().getWorkRequestList().add(req);
            
        }
        JOptionPane.showMessageDialog(null, "Your order has been placed!");
        populatePayDOwnPayment();
        btnBuy.setEnabled(false);
    }//GEN-LAST:event_btnBuyActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        BuyAMachineJPanel bm = (BuyAMachineJPanel) component;
        bm.populateOrder();
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed
    
    public static Date addDays(Date date, int days) {
        
        GregorianCalendar cal = new GregorianCalendar();
        cal.setTime(date);
        cal.add(Calendar.DATE, days);
        
        return cal.getTime();
    }
    
    public void populatePayDOwnPayment() {
        DecimalFormat df = new DecimalFormat("#.00");
        DefaultTableModel dtm = (DefaultTableModel) tblInstallmentInfo.getModel();
        dtm.setRowCount(0);
        
        for (OrderItem oi : o.getOrderItemList()) {
            Object row[] = new Object[7];
            row[0] = oi.getMachine().getLoan().getLoanId();
            row[1] = df.format(oi.getMachine().getLoan().getInstallmentsPaidPrice() * oi.getMachine().getLoan().getTimePeriod());
            row[2] = oi.getMachine().getLoan().getTimePeriod() - 1;
            row[3] = df.format(oi.getMachine().getLoan().getInstallmentsPaidPrice());
            
            oi.setMoneypaidForRequested(oi.getMachine().getLoan().getInstallmentsPaidPrice());
            row[4] = df.format(oi.getRemainingforOrder());
            
            oi.getMachine().getLoan().setRemainingAmountTobePaid(oi.getRemainingforOrder());
            row[5] = szDate1;
            if (oi.getRemainingforOrder() > 0) {
                row[6] = szDate;
            } else {
                row[6] = "-";
            }
            dtm.addRow(row);
            
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBuy;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCustomername1;
    private javax.swing.JLabel lblDownPayment;
    private javax.swing.JTable tblAddedtoCart;
    private javax.swing.JTable tblInstallmentInfo;
    // End of variables declaration//GEN-END:variables
}
